(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>C});var o=t(15),r=t.n(o),a=t(645),i=t.n(a),c=t(667),A=t.n(c),s=new URL(t(51),t.b),d=new URL(t(954),t.b),l=new URL(t(707),t.b),u=i()(r()),p=A()(s),m=A()(d),f=A()(l);u.push([n.id,":root {\n    --red-1: rgba(255, 106, 98, 1);\n    --red-2: rgba(255, 58, 51, 0.671);\n    --red-3: rgb(255, 213, 212);\n    --green-1: rgb(102, 189, 100);\n    --green-2: rgb(188, 231, 188, 0.8);\n    --green-3: rgba(231, 241, 232, 0.5);\n}\n\n@font-face {\n    font-family: 'Backslash';\n    src: url("+p+") format('woff2'),\n        url("+m+") format('woff');\n    font-weight: normal;\n    font-style: normal;\n    font-display: swap;\n}\n\nbody {\n    padding: 0;\n    margin: 0;\n    font-family:'Backslash';\n    background-attachment: fixed;\n    background: url("+f+') no-repeat center center fixed;\n    -webkit-background-size: cover;\n    -moz-background-size: cover;\n    -o-background-size: cover;\n    background-size: cover;\n    color: white;\n}\n\nul.tab-list {\n    display: flex;\n    list-style: none;\n    justify-content: center;\n}\n/* Tab CSS */\nul > li {\n    padding: 5px 10px;\n    cursor: pointer;\n    font-size: 1.5em;\n    transition: transform 0.3s;\n    color: white;\n}\nul > li:hover{\n    transform: translateY(-10%);\n    \n}\n\nheader {\n    background-color: black;\n    padding: 2px 10px;\n}\n@keyframes fadeIn {\n    0% {opacity:0;}\n    100% {opacity:1;}\n}\n.homepage, .menu-page, .contact-page {\n    color: white;\n    margin: 5px auto 64px auto;\n    width: 800px;\n    background-color: var(--red-2);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-top: 16px;\n    padding-bottom: 32px;\n    margin-top: 4em;\n    animation: fadeIn 1.5s;\n}\n\n.contact-page {\n    align-items: flex-start !important;\n}\n\n.info-box {\n    width: 60%;\n    height: auto;\n    border: 5px solid var(--red-1);\n    background-color: var(--red-3);\n    margin: 3em;\n}\n\n.caption {\n    font-family: "Montserrat", cursive;\n    margin-top: 8px;\n    font-size: 1.5em;\n}\n\np.hour-line {\n    margin: 5px;\n    font-size: 2em;\n    font-family: "Montserrat", cursive;\n    text-align: center;\n    color: white;\n}\n\n.hours-text {\n    font-family: "Montserrat", cursive;\n}\n\nh1 {\n    text-align: center;\n    font-size: 4em;\n    color: white;\n}\n\nh2 {\n    font-size: 2em;\n    text-align: center;\n    color: white;\n    padding: 2px;\n    font-family: "Montserrat", cursive;\n}\n.quote-box {\n    margin: 16px 25px;\n    color: white;\n}\n.quote-box p {\n    font-family: "Montserrat", cursive;\n    font-size: 2.25em;\n}\n.quote-box p.quote-text-author {\n    text-align: right;\n    margin-right: 8px;\n}\n\nul .active {\n    border-bottom: 2px solid white;\n}\n\n.menu-column {\n    display: flex;\n    flex-direction: column;\n    width: 90%;\n    align-items: center;\n}\n\n.menu-entry {\n    width: 500px;\n}\n\n.menu-item-name {\n    font-size: 2em;\n}\n\n.menu-item-image {\n    height: auto; \n    width: auto; \n    max-width: 500px; \n    max-height: 500px;\n}\n\n.location-address {\n    font-family: "Montserrat", cursive;\n    font-size: 1.5em;\n}\n\n.location-picture {\n    width: 100%;\n    height: auto;\n}\n\n.phone-number-text {\n    font-family: "Montserrat", cursive;\n    font-size: 1.5em;\n}\n\n.phone-number-text, .location-box {\n    margin-left: 32px;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,8BAA8B;IAC9B,iCAAiC;IACjC,2BAA2B;IAC3B,6BAA6B;IAC7B,kCAAkC;IAClC,mCAAmC;AACvC;;AAEA;IACI,wBAAwB;IACxB;8DAC+C;IAC/C,mBAAmB;IACnB,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,UAAU;IACV,SAAS;IACT,uBAAuB;IACvB,4BAA4B;IAC5B,iFAA8E;IAC9E,8BAA8B;IAC9B,2BAA2B;IAC3B,yBAAyB;IACzB,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,uBAAuB;AAC3B;AACA,YAAY;AACZ;IACI,iBAAiB;IACjB,eAAe;IACf,gBAAgB;IAChB,0BAA0B;IAC1B,YAAY;AAChB;AACA;IACI,2BAA2B;;AAE/B;;AAEA;IACI,uBAAuB;IACvB,iBAAiB;AACrB;AACA;IACI,IAAI,SAAS,CAAC;IACd,MAAM,SAAS,CAAC;AACpB;AACA;IACI,YAAY;IACZ,0BAA0B;IAC1B,YAAY;IACZ,8BAA8B;IAC9B,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,iBAAiB;IACjB,oBAAoB;IACpB,eAAe;IACf,sBAAsB;AAC1B;;AAEA;IACI,kCAAkC;AACtC;;AAEA;IACI,UAAU;IACV,YAAY;IACZ,8BAA8B;IAC9B,8BAA8B;IAC9B,WAAW;AACf;;AAEA;IACI,kCAAkC;IAClC,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,WAAW;IACX,cAAc;IACd,kCAAkC;IAClC,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,kCAAkC;AACtC;;AAEA;IACI,kBAAkB;IAClB,cAAc;IACd,YAAY;AAChB;;AAEA;IACI,cAAc;IACd,kBAAkB;IAClB,YAAY;IACZ,YAAY;IACZ,kCAAkC;AACtC;AACA;IACI,iBAAiB;IACjB,YAAY;AAChB;AACA;IACI,kCAAkC;IAClC,iBAAiB;AACrB;AACA;IACI,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,UAAU;IACV,mBAAmB;AACvB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,gBAAgB;IAChB,iBAAiB;AACrB;;AAEA;IACI,kCAAkC;IAClC,gBAAgB;AACpB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,kCAAkC;IAClC,gBAAgB;AACpB;;AAEA;IACI,iBAAiB;AACrB",sourcesContent:[':root {\n    --red-1: rgba(255, 106, 98, 1);\n    --red-2: rgba(255, 58, 51, 0.671);\n    --red-3: rgb(255, 213, 212);\n    --green-1: rgb(102, 189, 100);\n    --green-2: rgb(188, 231, 188, 0.8);\n    --green-3: rgba(231, 241, 232, 0.5);\n}\n\n@font-face {\n    font-family: \'Backslash\';\n    src: url(\'BackslashRegular.woff2\') format(\'woff2\'),\n        url(\'BackslashRegular.woff\') format(\'woff\');\n    font-weight: normal;\n    font-style: normal;\n    font-display: swap;\n}\n\nbody {\n    padding: 0;\n    margin: 0;\n    font-family:\'Backslash\';\n    background-attachment: fixed;\n    background: url(./chinese_restaurant_banner.jpg) no-repeat center center fixed;\n    -webkit-background-size: cover;\n    -moz-background-size: cover;\n    -o-background-size: cover;\n    background-size: cover;\n    color: white;\n}\n\nul.tab-list {\n    display: flex;\n    list-style: none;\n    justify-content: center;\n}\n/* Tab CSS */\nul > li {\n    padding: 5px 10px;\n    cursor: pointer;\n    font-size: 1.5em;\n    transition: transform 0.3s;\n    color: white;\n}\nul > li:hover{\n    transform: translateY(-10%);\n    \n}\n\nheader {\n    background-color: black;\n    padding: 2px 10px;\n}\n@keyframes fadeIn {\n    0% {opacity:0;}\n    100% {opacity:1;}\n}\n.homepage, .menu-page, .contact-page {\n    color: white;\n    margin: 5px auto 64px auto;\n    width: 800px;\n    background-color: var(--red-2);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-top: 16px;\n    padding-bottom: 32px;\n    margin-top: 4em;\n    animation: fadeIn 1.5s;\n}\n\n.contact-page {\n    align-items: flex-start !important;\n}\n\n.info-box {\n    width: 60%;\n    height: auto;\n    border: 5px solid var(--red-1);\n    background-color: var(--red-3);\n    margin: 3em;\n}\n\n.caption {\n    font-family: "Montserrat", cursive;\n    margin-top: 8px;\n    font-size: 1.5em;\n}\n\np.hour-line {\n    margin: 5px;\n    font-size: 2em;\n    font-family: "Montserrat", cursive;\n    text-align: center;\n    color: white;\n}\n\n.hours-text {\n    font-family: "Montserrat", cursive;\n}\n\nh1 {\n    text-align: center;\n    font-size: 4em;\n    color: white;\n}\n\nh2 {\n    font-size: 2em;\n    text-align: center;\n    color: white;\n    padding: 2px;\n    font-family: "Montserrat", cursive;\n}\n.quote-box {\n    margin: 16px 25px;\n    color: white;\n}\n.quote-box p {\n    font-family: "Montserrat", cursive;\n    font-size: 2.25em;\n}\n.quote-box p.quote-text-author {\n    text-align: right;\n    margin-right: 8px;\n}\n\nul .active {\n    border-bottom: 2px solid white;\n}\n\n.menu-column {\n    display: flex;\n    flex-direction: column;\n    width: 90%;\n    align-items: center;\n}\n\n.menu-entry {\n    width: 500px;\n}\n\n.menu-item-name {\n    font-size: 2em;\n}\n\n.menu-item-image {\n    height: auto; \n    width: auto; \n    max-width: 500px; \n    max-height: 500px;\n}\n\n.location-address {\n    font-family: "Montserrat", cursive;\n    font-size: 1.5em;\n}\n\n.location-picture {\n    width: 100%;\n    height: auto;\n}\n\n.phone-number-text {\n    font-family: "Montserrat", cursive;\n    font-size: 1.5em;\n}\n\n.phone-number-text, .location-box {\n    margin-left: 32px;\n}'],sourceRoot:""}]);const C=u},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,o){"string"==typeof n&&(n=[[null,n,""]]);var r={};if(o)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(r[i]=!0)}for(var c=0;c<n.length;c++){var A=[].concat(n[c]);o&&r[A[0]]||(t&&(A[2]?A[2]="".concat(t," and ").concat(A[2]):A[2]=t),e.push(A))}},e}},15:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,o=new Array(e);t<e;t++)o[t]=n[t];return o}n.exports=function(n){var t,o,r=(o=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var o,r,a=[],i=!0,c=!1;try{for(t=t.call(n);!(i=(o=t.next()).done)&&(a.push(o.value),!e||a.length!==e);i=!0);}catch(n){c=!0,r=n}finally{try{i||null==t.return||t.return()}finally{if(c)throw r}}return a}}(t,o)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var o=Object.prototype.toString.call(n).slice(8,-1);return"Object"===o&&n.constructor&&(o=n.constructor.name),"Map"===o||"Set"===o?Array.from(n):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?e(n,t):void 0}}(t,o)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=r[1],i=r[3];if(!i)return a;if("function"==typeof btoa){var c=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),s="/*# ".concat(A," */"),d=i.sources.map((function(n){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(n," */")}));return[a].concat(d).concat([s]).join("\n")}return[a].join("\n")}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],c=0;c<n.length;c++){var A=n[c],s=o.base?A[0]+o.base:A[0],d=a[s]||0,l="".concat(s," ").concat(d);a[s]=d+1;var u=t(l),p={css:A[1],media:A[2],sourceMap:A[3]};-1!==u?(e[u].references++,e[u].updater(p)):e.push({identifier:l,updater:r(p,o),references:1}),i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var A=o(n,r),s=0;s<a.length;s++){var d=t(a[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=A}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o=t.css,r=t.media,a=t.sourceMap;r?n.setAttribute("media",r):n.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},954:(n,e,t)=>{n.exports=t.p+"5aa1ea41fac35243b68a.woff"},51:(n,e,t)=>{n.exports=t.p+"13c930f8a338b99066c1.woff2"},557:(n,e,t)=>{n.exports=t.p+"f815cff2cad742263cb5.jpg"},701:(n,e,t)=>{n.exports=t.p+"e0b71b0019145b51fa45.jpg"},707:(n,e,t)=>{n.exports=t.p+"8c3f4af0daa70cbefe33.jpg"},470:(n,e,t)=>{n.exports=t.p+"75bf2daace3a0fb3b277.jpg"},84:(n,e,t)=>{n.exports=t.p+"14f78542064162621a2f.jpg"},887:(n,e,t)=>{n.exports=t.p+"a61e15058b138dfb173a.jpg"},29:(n,e,t)=>{n.exports=t.p+"5d616050cb10582123f7.jpg"},452:(n,e,t)=>{n.exports=t.p+"02516b6a9a465341cf9b.jpg"},714:(n,e,t)=>{n.exports=t.p+"c3be83e7d5665db5a34f.jpg"},260:(n,e,t)=>{n.exports=t.p+"6d12edfcf6a5a8596529.jpg"},214:(n,e,t)=>{n.exports=t.p+"42512a0c355a0daa2201.jpg"},82:(n,e,t)=>{n.exports=t.p+"110f1317c70869698d3b.png"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),a=t(569),i=t.n(a),c=t(565),A=t.n(c),s=t(216),d=t.n(s),l=t(589),u=t.n(l),p=t(426),m={};m.styleTagTransform=u(),m.setAttributes=A(),m.insert=i().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=d(),e()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;var f=t(557),C=t(701),h=t(452),g=t(470),B=t(84),b=t(887),x=t(29),I=t(714),v=t(260),y=t(214);function w(n,e,t){const o=document.createElement("div");o.classList.add("menu-entry");const r=document.createElement("p");r.classList.add("menu-item-name"),r.textContent=n,o.appendChild(r);const a=document.createElement("p");a.classList.add("menu-item-price"),a.textContent=e,o.appendChild(a);const i=document.createElement("img");return i.classList.add("menu-item-image"),i.src=t,o.append(i),o}var k=t(82);let E="",[L,S,M]=function(){const n=document.createElement("header"),e=document.createElement("h1");e.textContent="Ling Ling's Sichuan",n.appendChild(e);const t=document.createElement("nav"),o=document.createElement("ul");o.classList.add("tab-list");let[r,a,i]=[document.createElement("li"),document.createElement("li"),document.createElement("li")],c=[r,a,i];r.classList.add("home"),r.textContent="Home",a.classList.add("menu"),a.textContent="Menu",i.classList.add("contact"),i.textContent="Contact";for(let n of c)n.classList.add("tab"),o.appendChild(n);return t.appendChild(o),n.appendChild(t),document.body.insertBefore(n,document.body.firstChild),c}(),j=[L,S,M];function Y(n){if(E!=n){switch(function(n){for(let e of n)e.classList.remove("active")}(j),this.classList.add("active"),function(n){for(;n.firstChild;)n.removeChild(n.firstChild)}(document.querySelector("div#content")),n){case"home":!function(){const n=document.querySelector("div#content"),e=document.createElement("div");e.classList.add("homepage");const t=document.createElement("div"),o=document.createElement("h2");o.textContent="Hours",o.classList.add("hours-text"),t.append(o);const r={Monday:"3pm - 10pm",Tuesday:"3pm - 10pm",Wednesday:"3pm - 10pm",Thursday:"3pm - 10pm",Friday:"3pm - 11pm",Saturday:"10am - 11pm",Sunday:"10am - 10pm"};for(let n in r){const e=document.createElement("p");e.classList.add("hour-line"),e.textContent=`${n}: ${r[n]}`,t.appendChild(e)}const a=document.createElement("div");a.classList.add("quote-box");const i=document.createElement("p");i.classList.add("quote-text"),i.textContent='"Chef Zhang\'s dishes are full of flavor and finesse. Definitely the best \n    Chinese restaurant in the US."',a.appendChild(i);const c=document.createElement("p");c.classList.add("quote-text"),c.classList.add("quote-text-author"),c.textContent="Gordan Ramsay",a.appendChild(c);const A=document.createElement("div"),s=document.createElement("img");s.classList.add("chef-picture"),s.src=f;const d=document.createElement("p");d.classList.add("caption"),d.textContent="Executive Chef Daniel Zhang",A.appendChild(s),A.appendChild(d);const l=function(n,e,t){let o=n.cloneNode(!0);return o.querySelector(".chef-picture").src=e,o.querySelector(".caption").textContent="Sous Chef Richard Martin",o}(A,C);e.appendChild(a),e.appendChild(A),e.appendChild(l),e.appendChild(t),n.append(e)}();break;case"menu":!function(){const n=document.querySelector("div#content"),e=document.createElement("div");e.classList.add("menu-page");const t=document.createElement("div");t.classList.add("menu-column");const o={"Mapo Dofu":["6.99",h],"Fuqi Feipian":["7.99",x],"Chongqing Spicy Chicken":["10.99",g],"Cold Diced Chili Rabbit":["11.99",B],"Spicy Mung Bean Jelly":["5.99",I],"Dan Dan Mian":["6.99",b],"Water Boiled Fish":["8.99",y],"Twice Cooked Pork Belly":["10.99",v]};for(let n in o){const e=w(n,o[n][0],o[n][1]);t.appendChild(e)}e.appendChild(t),n.appendChild(e)}();break;case"contact":!function(){const n=document.querySelector("div#content"),e=document.createElement("div");e.classList.add("contact-page");const t=document.createElement("div"),o=document.createElement("p");o.textContent="Phone Number: (281) 665-7117",o.classList.add("phone-number-text"),t.appendChild(o),t.classList.add("phone-number-box");const r=document.createElement("div"),a=document.createElement("p");a.textContent="Address: 5929 FM 1463 #140, Katy, TX 77494",a.classList.add("location-address");const i=document.createElement("img");i.src=k,i.classList.add("location-picture"),r.appendChild(a),r.appendChild(i),r.classList.add("location-box"),e.appendChild(t),e.appendChild(r),n.appendChild(e)}()}E=n}}L.addEventListener("click",(()=>{Y.bind(L)("home")})),S.addEventListener("click",(()=>{Y.bind(S)("menu")})),M.addEventListener("click",(()=>{Y.bind(M)("contact")})),Y.bind(L)("home")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,